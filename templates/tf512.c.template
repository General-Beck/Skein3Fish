/*
Copyright (c) 2010 Alberto Fajardo

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

The tweaks and modifications for Java:
Copyright (c) 2010, Werner Dittmann. 

The same permissions granted.
 */

/*
 * Use the following commad (on Linux for example) to generate the real
 * C soure file:
 *    gcc -E - < Threefish512.c.template | sed -e '/^#/d' -e 's/>>>/>>/g' > Threefish512Block.c
 *
 * The resulting C file needs some editing, mainly to add other #include
 * stuff to resolve the type definitions. Linux requires a #include <stdint.h>
 * 
 * The mix.h contains Mix and UnMix macros that replace the Mix/UnMix calls
 * below with the real code. This produces unrolled loops. This technique
 * saves a lot of error prone editing.
 * sed just removes some lines that gcc -E inserted.
 */

#include "mix.h"
#include "shifter.h"

void threefishEncrypt512(ThreefishKey_t* keyCtx, uint64_t* input, uint64_t* output)
    {
        // Cache the block, key, and tweak
    uint64_t b[8];
    uint64_t* k = keyCtx->key;
    uint64_t* t = keyCtx->tweak;
    memcpy(b, input, 8 * sizeof(uint64_t));

        Mix5( b[0],  b[1], R_512_0_0, k[0], k[1]);
        Mix5( b[2],  b[3], R_512_0_1, k[2], k[3]);
        Mix5( b[4],  b[5], R_512_0_2, k[4], k[5] + t[0]);
        Mix5( b[6],  b[7], R_512_0_3, k[6] + t[1], k[7]);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[1], k[2]);
        Mix5( b[2],  b[3], R_512_4_1, k[3], k[4]);
        Mix5( b[4],  b[5], R_512_4_2, k[5], k[6] + t[1]);
        Mix5( b[6],  b[7], R_512_4_3, k[7] + t[2], k[8] + 1);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[2], k[3]);
        Mix5( b[2],  b[3], R_512_0_1, k[4], k[5]);
        Mix5( b[4],  b[5], R_512_0_2, k[6], k[7] + t[2]);
        Mix5( b[6],  b[7], R_512_0_3, k[8] + t[0], k[0] + 2);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[3], k[4]);
        Mix5( b[2],  b[3], R_512_4_1, k[5], k[6]);
        Mix5( b[4],  b[5], R_512_4_2, k[7], k[8] + t[0]);
        Mix5( b[6],  b[7], R_512_4_3, k[0] + t[1], k[1] + 3);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[4], k[5]);
        Mix5( b[2],  b[3], R_512_0_1, k[6], k[7]);
        Mix5( b[4],  b[5], R_512_0_2, k[8], k[0] + t[1]);
        Mix5( b[6],  b[7], R_512_0_3, k[1] + t[2], k[2] + 4);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[5], k[6]);
        Mix5( b[2],  b[3], R_512_4_1, k[7], k[8]);
        Mix5( b[4],  b[5], R_512_4_2, k[0], k[1] + t[2]);
        Mix5( b[6],  b[7], R_512_4_3, k[2] + t[0], k[3] + 5);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[6], k[7]);
        Mix5( b[2],  b[3], R_512_0_1, k[8], k[0]);
        Mix5( b[4],  b[5], R_512_0_2, k[1], k[2] + t[0]);
        Mix5( b[6],  b[7], R_512_0_3, k[3] + t[1], k[4] + 6);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[7], k[8]);
        Mix5( b[2],  b[3], R_512_4_1, k[0], k[1]);
        Mix5( b[4],  b[5], R_512_4_2, k[2], k[3] + t[1]);
        Mix5( b[6],  b[7], R_512_4_3, k[4] + t[2], k[5] + 7);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[8], k[0]);
        Mix5( b[2],  b[3], R_512_0_1, k[1], k[2]);
        Mix5( b[4],  b[5], R_512_0_2, k[3], k[4] + t[2]);
        Mix5( b[6],  b[7], R_512_0_3, k[5] + t[0], k[6] + 8);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[0], k[1]);
        Mix5( b[2],  b[3], R_512_4_1, k[2], k[3]);
        Mix5( b[4],  b[5], R_512_4_2, k[4], k[5] + t[0]);
        Mix5( b[6],  b[7], R_512_4_3, k[6] + t[1], k[7] + 9);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[1], k[2]);
        Mix5( b[2],  b[3], R_512_0_1, k[3], k[4]);
        Mix5( b[4],  b[5], R_512_0_2, k[5], k[6] + t[1]);
        Mix5( b[6],  b[7], R_512_0_3, k[7] + t[2], k[8] + 10);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[2], k[3]);
        Mix5( b[2],  b[3], R_512_4_1, k[4], k[5]);
        Mix5( b[4],  b[5], R_512_4_2, k[6], k[7] + t[2]);
        Mix5( b[6],  b[7], R_512_4_3, k[8] + t[0], k[0] + 11);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[3], k[4]);
        Mix5( b[2],  b[3], R_512_0_1, k[5], k[6]);
        Mix5( b[4],  b[5], R_512_0_2, k[7], k[8] + t[0]);
        Mix5( b[6],  b[7], R_512_0_3, k[0] + t[1], k[1] + 12);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[4], k[5]);
        Mix5( b[2],  b[3], R_512_4_1, k[6], k[7]);
        Mix5( b[4],  b[5], R_512_4_2, k[8], k[0] + t[1]);
        Mix5( b[6],  b[7], R_512_4_3, k[1] + t[2], k[2] + 13);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[5], k[6]);
        Mix5( b[2],  b[3], R_512_0_1, k[7], k[8]);
        Mix5( b[4],  b[5], R_512_0_2, k[0], k[1] + t[2]);
        Mix5( b[6],  b[7], R_512_0_3, k[2] + t[0], k[3] + 14);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[6], k[7]);
        Mix5( b[2],  b[3], R_512_4_1, k[8], k[0]);
        Mix5( b[4],  b[5], R_512_4_2, k[1], k[2] + t[0]);
        Mix5( b[6],  b[7], R_512_4_3, k[3] + t[1], k[4] + 15);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);
        Mix5( b[0],  b[1], R_512_0_0, k[7], k[8]);
        Mix5( b[2],  b[3], R_512_0_1, k[0], k[1]);
        Mix5( b[4],  b[5], R_512_0_2, k[2], k[3] + t[1]);
        Mix5( b[6],  b[7], R_512_0_3, k[4] + t[2], k[5] + 16);
        Mix( b[2],  b[1], R_512_1_0);
        Mix( b[4],  b[7], R_512_1_1);
        Mix( b[6],  b[5], R_512_1_2);
        Mix( b[0],  b[3], R_512_1_3);
        Mix( b[4],  b[1], R_512_2_0);
        Mix( b[6],  b[3], R_512_2_1);
        Mix( b[0],  b[5], R_512_2_2);
        Mix( b[2],  b[7], R_512_2_3);
        Mix( b[6],  b[1], R_512_3_0);
        Mix( b[0],  b[7], R_512_3_1);
        Mix( b[2],  b[5], R_512_3_2);
        Mix( b[4],  b[3], R_512_3_3);
        Mix5( b[0],  b[1], R_512_4_0, k[8], k[0]);
        Mix5( b[2],  b[3], R_512_4_1, k[1], k[2]);
        Mix5( b[4],  b[5], R_512_4_2, k[3], k[4] + t[2]);
        Mix5( b[6],  b[7], R_512_4_3, k[5] + t[0], k[6] + 17);
        Mix( b[2],  b[1], R_512_5_0);
        Mix( b[4],  b[7], R_512_5_1);
        Mix( b[6],  b[5], R_512_5_2);
        Mix( b[0],  b[3], R_512_5_3);
        Mix( b[4],  b[1], R_512_6_0);
        Mix( b[6],  b[3], R_512_6_1);
        Mix( b[0],  b[5], R_512_6_2);
        Mix( b[2],  b[7], R_512_6_3);
        Mix( b[6],  b[1], R_512_7_0);
        Mix( b[0],  b[7], R_512_7_1);
        Mix( b[2],  b[5], R_512_7_2);
        Mix( b[4],  b[3], R_512_7_3);

        // Final key schedule
        output[0] = b[0] + k[0];
        output[1] = b[1] + k[1];
        output[2] = b[2] + k[2];
        output[3] = b[3] + k[3];
        output[4] = b[4] + k[4];
        output[5] = b[5] + k[5] + t[0];
        output[6] = b[6] + k[6] + t[1];
        output[7] = b[7] + k[7] + 18;
    }

void threefishDecrypt512(ThreefishKey_t* keyCtx, uint64_t* input, uint64_t* output)
    {
        // Cache the block, key, and tweak
        uint64_t b[8];
	uint64_t* k = keyCtx->key;
        uint64_t* t = keyCtx->tweak;
	uint64_t tmp;

	memcpy(b, input, 8 * sizeof(uint64_t));

        b[0] -= k[0];
        b[1] -= k[1];
        b[2] -= k[2];
        b[3] -= k[3];
        b[4] -= k[4];
        b[5] -= k[5] + t[0];
        b[6] -= k[6] + t[1];
        b[7] -= k[7] + 18;
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[5] + t[0], k[6] + 17);
        UnMix5( b[4],  b[5], R_512_4_2, k[3], k[4] + t[2]);
        UnMix5( b[2],  b[3], R_512_4_1, k[1], k[2]);
        UnMix5( b[0],  b[1], R_512_4_0, k[8], k[0]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[4] + t[2], k[5] + 16);
        UnMix5( b[4],  b[5], R_512_0_2, k[2], k[3] + t[1]);
        UnMix5( b[2],  b[3], R_512_0_1, k[0], k[1]);
        UnMix5( b[0],  b[1], R_512_0_0, k[7], k[8]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[3] + t[1], k[4] + 15);
        UnMix5( b[4],  b[5], R_512_4_2, k[1], k[2] + t[0]);
        UnMix5( b[2],  b[3], R_512_4_1, k[8], k[0]);
        UnMix5( b[0],  b[1], R_512_4_0, k[6], k[7]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[2] + t[0], k[3] + 14);
        UnMix5( b[4],  b[5], R_512_0_2, k[0], k[1] + t[2]);
        UnMix5( b[2],  b[3], R_512_0_1, k[7], k[8]);
        UnMix5( b[0],  b[1], R_512_0_0, k[5], k[6]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[1] + t[2], k[2] + 13);
        UnMix5( b[4],  b[5], R_512_4_2, k[8], k[0] + t[1]);
        UnMix5( b[2],  b[3], R_512_4_1, k[6], k[7]);
        UnMix5( b[0],  b[1], R_512_4_0, k[4], k[5]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[0] + t[1], k[1] + 12);
        UnMix5( b[4],  b[5], R_512_0_2, k[7], k[8] + t[0]);
        UnMix5( b[2],  b[3], R_512_0_1, k[5], k[6]);
        UnMix5( b[0],  b[1], R_512_0_0, k[3], k[4]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[8] + t[0], k[0] + 11);
        UnMix5( b[4],  b[5], R_512_4_2, k[6], k[7] + t[2]);
        UnMix5( b[2],  b[3], R_512_4_1, k[4], k[5]);
        UnMix5( b[0],  b[1], R_512_4_0, k[2], k[3]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[7] + t[2], k[8] + 10);
        UnMix5( b[4],  b[5], R_512_0_2, k[5], k[6] + t[1]);
        UnMix5( b[2],  b[3], R_512_0_1, k[3], k[4]);
        UnMix5( b[0],  b[1], R_512_0_0, k[1], k[2]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[6] + t[1], k[7] + 9);
        UnMix5( b[4],  b[5], R_512_4_2, k[4], k[5] + t[0]);
        UnMix5( b[2],  b[3], R_512_4_1, k[2], k[3]);
        UnMix5( b[0],  b[1], R_512_4_0, k[0], k[1]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[5] + t[0], k[6] + 8);
        UnMix5( b[4],  b[5], R_512_0_2, k[3], k[4] + t[2]);
        UnMix5( b[2],  b[3], R_512_0_1, k[1], k[2]);
        UnMix5( b[0],  b[1], R_512_0_0, k[8], k[0]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[4] + t[2], k[5] + 7);
        UnMix5( b[4],  b[5], R_512_4_2, k[2], k[3] + t[1]);
        UnMix5( b[2],  b[3], R_512_4_1, k[0], k[1]);
        UnMix5( b[0],  b[1], R_512_4_0, k[7], k[8]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[3] + t[1], k[4] + 6);
        UnMix5( b[4],  b[5], R_512_0_2, k[1], k[2] + t[0]);
        UnMix5( b[2],  b[3], R_512_0_1, k[8], k[0]);
        UnMix5( b[0],  b[1], R_512_0_0, k[6], k[7]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[2] + t[0], k[3] + 5);
        UnMix5( b[4],  b[5], R_512_4_2, k[0], k[1] + t[2]);
        UnMix5( b[2],  b[3], R_512_4_1, k[7], k[8]);
        UnMix5( b[0],  b[1], R_512_4_0, k[5], k[6]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[1] + t[2], k[2] + 4);
        UnMix5( b[4],  b[5], R_512_0_2, k[8], k[0] + t[1]);
        UnMix5( b[2],  b[3], R_512_0_1, k[6], k[7]);
        UnMix5( b[0],  b[1], R_512_0_0, k[4], k[5]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[0] + t[1], k[1] + 3);
        UnMix5( b[4],  b[5], R_512_4_2, k[7], k[8] + t[0]);
        UnMix5( b[2],  b[3], R_512_4_1, k[5], k[6]);
        UnMix5( b[0],  b[1], R_512_4_0, k[3], k[4]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[8] + t[0], k[0] + 2);
        UnMix5( b[4],  b[5], R_512_0_2, k[6], k[7] + t[2]);
        UnMix5( b[2],  b[3], R_512_0_1, k[4], k[5]);
        UnMix5( b[0],  b[1], R_512_0_0, k[2], k[3]);
        UnMix( b[4],  b[3], R_512_7_3);
        UnMix( b[2],  b[5], R_512_7_2);
        UnMix( b[0],  b[7], R_512_7_1);
        UnMix( b[6],  b[1], R_512_7_0);
        UnMix( b[2],  b[7], R_512_6_3);
        UnMix( b[0],  b[5], R_512_6_2);
        UnMix( b[6],  b[3], R_512_6_1);
        UnMix( b[4],  b[1], R_512_6_0);
        UnMix( b[0],  b[3], R_512_5_3);
        UnMix( b[6],  b[5], R_512_5_2);
        UnMix( b[4],  b[7], R_512_5_1);
        UnMix( b[2],  b[1], R_512_5_0);
        UnMix5( b[6],  b[7], R_512_4_3, k[7] + t[2], k[8] + 1);
        UnMix5( b[4],  b[5], R_512_4_2, k[5], k[6] + t[1]);
        UnMix5( b[2],  b[3], R_512_4_1, k[3], k[4]);
        UnMix5( b[0],  b[1], R_512_4_0, k[1], k[2]);
        UnMix( b[4],  b[3], R_512_3_3);
        UnMix( b[2],  b[5], R_512_3_2);
        UnMix( b[0],  b[7], R_512_3_1);
        UnMix( b[6],  b[1], R_512_3_0);
        UnMix( b[2],  b[7], R_512_2_3);
        UnMix( b[0],  b[5], R_512_2_2);
        UnMix( b[6],  b[3], R_512_2_1);
        UnMix( b[4],  b[1], R_512_2_0);
        UnMix( b[0],  b[3], R_512_1_3);
        UnMix( b[6],  b[5], R_512_1_2);
        UnMix( b[4],  b[7], R_512_1_1);
        UnMix( b[2],  b[1], R_512_1_0);
        UnMix5( b[6],  b[7], R_512_0_3, k[6] + t[1], k[7]);
        UnMix5( b[4],  b[5], R_512_0_2, k[4], k[5] + t[0]);
        UnMix5( b[2],  b[3], R_512_0_1, k[2], k[3]);
        UnMix5( b[0],  b[1], R_512_0_0, k[0], k[1]);

        output[7] = b[7];
        output[6] = b[6];
        output[5] = b[5];
        output[4] = b[4];
        output[3] = b[3];
        output[2] = b[2];
        output[1] = b[1];
        output[0] = b[0];
    }
